// Mocks generated by Mockito 5.4.5 from annotations
// in ridelink/test/features/dynamic_ride_joining_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:firebase_auth/firebase_auth.dart' as _i11;
import 'package:firebase_messaging/firebase_messaging.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:ridelink/models/rating.dart' as _i10;
import 'package:ridelink/models/ride_group.dart' as _i5;
import 'package:ridelink/models/user_profile.dart' as _i2;
import 'package:ridelink/services/notification_service.dart' as _i7;
import 'package:ridelink/services/ride_service.dart' as _i3;
import 'package:ridelink/services/user_service.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserProfile_0 extends _i1.SmartFake implements _i2.UserProfile {
  _FakeUserProfile_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IRideService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIRideService extends _i1.Mock implements _i3.IRideService {
  MockIRideService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> createRide(_i5.RideGroup? ride) => (super.noSuchMethod(
        Invocation.method(
          #createRide,
          [ride],
        ),
        returnValue: _i4.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #createRide,
            [ride],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<_i5.RideGroup?> getRide(String? rideId) => (super.noSuchMethod(
        Invocation.method(
          #getRide,
          [rideId],
        ),
        returnValue: _i4.Future<_i5.RideGroup?>.value(),
      ) as _i4.Future<_i5.RideGroup?>);

  @override
  _i4.Future<List<_i5.RideGroup>> searchRides(Map<String, dynamic>? criteria) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRides,
          [criteria],
        ),
        returnValue: _i4.Future<List<_i5.RideGroup>>.value(<_i5.RideGroup>[]),
      ) as _i4.Future<List<_i5.RideGroup>>);

  @override
  _i4.Future<List<_i5.RideGroup>> getNearbyRides(
    double? lat,
    double? lng, {
    double? radiusKm = 50.0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNearbyRides,
          [
            lat,
            lng,
          ],
          {#radiusKm: radiusKm},
        ),
        returnValue: _i4.Future<List<_i5.RideGroup>>.value(<_i5.RideGroup>[]),
      ) as _i4.Future<List<_i5.RideGroup>>);

  @override
  _i4.Future<List<_i5.RideGroup>> getUserRides(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserRides,
          [userId],
        ),
        returnValue: _i4.Future<List<_i5.RideGroup>>.value(<_i5.RideGroup>[]),
      ) as _i4.Future<List<_i5.RideGroup>>);

  @override
  _i4.Future<void> updateRide(_i5.RideGroup? ride) => (super.noSuchMethod(
        Invocation.method(
          #updateRide,
          [ride],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> cancelRide(
    String? rideId,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelRide,
          [
            rideId,
            reason,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> requestToJoin(
    String? rideId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestToJoin,
          [
            rideId,
            userId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> approveJoinRequest(
    String? rideId,
    String? requesterId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #approveJoinRequest,
          [
            rideId,
            requesterId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> rejectJoinRequest(
    String? rideId,
    String? requesterId,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectJoinRequest,
          [
            rideId,
            requesterId,
            reason,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> removeMember(
    String? rideId,
    String? memberId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMember,
          [
            rideId,
            memberId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> startRide(String? rideId) => (super.noSuchMethod(
        Invocation.method(
          #startRide,
          [rideId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> completeRide(String? rideId) => (super.noSuchMethod(
        Invocation.method(
          #completeRide,
          [rideId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Stream<_i5.RideGroup?> getRideStream(String? rideId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRideStream,
          [rideId],
        ),
        returnValue: _i4.Stream<_i5.RideGroup?>.empty(),
      ) as _i4.Stream<_i5.RideGroup?>);

  @override
  _i4.Stream<List<_i5.RideGroup>> getUserRidesStream(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserRidesStream,
          [userId],
        ),
        returnValue: _i4.Stream<List<_i5.RideGroup>>.empty(),
      ) as _i4.Stream<List<_i5.RideGroup>>);

  @override
  _i4.Future<double> calculateDistance(
    _i5.LatLng? from,
    _i5.LatLng? to,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateDistance,
          [
            from,
            to,
          ],
        ),
        returnValue: _i4.Future<double>.value(0.0),
      ) as _i4.Future<double>);

  @override
  _i4.Future<double> calculateFare(
    _i5.LatLng? from,
    _i5.LatLng? to,
    int? passengers,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateFare,
          [
            from,
            to,
            passengers,
          ],
        ),
        returnValue: _i4.Future<double>.value(0.0),
      ) as _i4.Future<double>);
}

/// A class which mocks [INotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockINotificationService extends _i1.Mock
    implements _i7.INotificationService {
  MockINotificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i8.RemoteMessage> get onMessage => (super.noSuchMethod(
        Invocation.getter(#onMessage),
        returnValue: _i4.Stream<_i8.RemoteMessage>.empty(),
      ) as _i4.Stream<_i8.RemoteMessage>);

  @override
  _i4.Stream<_i8.RemoteMessage> get onMessageOpenedApp => (super.noSuchMethod(
        Invocation.getter(#onMessageOpenedApp),
        returnValue: _i4.Stream<_i8.RemoteMessage>.empty(),
      ) as _i4.Stream<_i8.RemoteMessage>);

  @override
  _i4.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<void> subscribeToTopic(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #subscribeToTopic,
          [topic],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> unsubscribeFromTopic(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #unsubscribeFromTopic,
          [topic],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> sendJoinRequestNotification(
    String? leaderId,
    String? rideDestination,
    String? requesterName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendJoinRequestNotification,
          [
            leaderId,
            rideDestination,
            requesterName,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> sendJoinRequestResponseNotification(
    String? userId,
    String? rideDestination,
    bool? approved,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendJoinRequestResponseNotification,
          [
            userId,
            rideDestination,
            approved,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [IUserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUserService extends _i1.Mock implements _i9.IUserService {
  MockIUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserProfile> createProfile(_i2.UserProfile? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProfile,
          [profile],
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #createProfile,
            [profile],
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);

  @override
  _i4.Future<_i2.UserProfile> updateProfile(_i2.UserProfile? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [profile],
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #updateProfile,
            [profile],
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);

  @override
  _i4.Future<_i2.UserProfile?> getUserProfile(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [userId],
        ),
        returnValue: _i4.Future<_i2.UserProfile?>.value(),
      ) as _i4.Future<_i2.UserProfile?>);

  @override
  _i4.Future<double> getUserRating(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUserRating,
          [userId],
        ),
        returnValue: _i4.Future<double>.value(0.0),
      ) as _i4.Future<double>);

  @override
  _i4.Future<List<_i10.Rating>> getUserRatings(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserRatings,
          [userId],
        ),
        returnValue: _i4.Future<List<_i10.Rating>>.value(<_i10.Rating>[]),
      ) as _i4.Future<List<_i10.Rating>>);

  @override
  _i4.Future<String?> uploadProfileImage(
    String? userId,
    dynamic imageFile,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfileImage,
          [
            userId,
            imageFile,
          ],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<void> deleteProfileImage(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteProfileImage,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.UserProfile> createProfileFromFirebaseUser(
          _i11.User? firebaseUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProfileFromFirebaseUser,
          [firebaseUser],
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #createProfileFromFirebaseUser,
            [firebaseUser],
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);

  @override
  _i4.Future<bool> profileExists(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #profileExists,
          [userId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Stream<_i2.UserProfile?> getUserProfileStream(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfileStream,
          [userId],
        ),
        returnValue: _i4.Stream<_i2.UserProfile?>.empty(),
      ) as _i4.Stream<_i2.UserProfile?>);

  @override
  _i4.Future<List<_i2.UserProfile>> searchUsers(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUsers,
          [query],
        ),
        returnValue:
            _i4.Future<List<_i2.UserProfile>>.value(<_i2.UserProfile>[]),
      ) as _i4.Future<List<_i2.UserProfile>>);

  @override
  _i4.Future<void> incrementRideCount(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #incrementRideCount,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateUserRating(
    String? userId,
    double? newRating,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserRating,
          [
            userId,
            newRating,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
